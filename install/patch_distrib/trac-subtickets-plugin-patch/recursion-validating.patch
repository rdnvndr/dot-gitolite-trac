diff --git a/tracsubtickets/web_ui.py b/tracsubtickets/web_ui.py
index d369e99..02e07f2 100644
--- a/tracsubtickets/web_ui.py
+++ b/tracsubtickets/web_ui.py
@@ -33,9 +33,10 @@ from trac.web.chrome import ITemplateProvider, add_stylesheet
 from trac.ticket.api import ITicketManipulator
 from trac.ticket.model import Ticket
 from trac.resource import ResourceNotFound
+from trac.config import BoolOption
 from genshi.builder import tag
 from genshi.filters import Transformer
-
+  
 from api import NUMBERS_RE, _
 
 
@@ -45,7 +46,15 @@ class SubTicketsModule(Component):
                IRequestFilter,
                ITicketManipulator,
                ITemplateStreamFilter)
-
+               
+    resolve_validate = BoolOption('ticket-workflow', 'resolve.validate', True,
+              doc="The option of validating status of subtickets for resolving.")
+    reopen_validate = BoolOption('ticket-workflow', 'reopen.validate', True,
+              doc="The option of validating status of subtickets for reopening.")
+
+    recursion = BoolOption('tracsubtickets', 'recursion', False,
+              doc="The option of recursion showing of tickets in the ticket.")
+              
     # ITemplateProvider methods
     def get_htdocs_dirs(self):
         from pkg_resources import resource_filename
@@ -115,8 +124,9 @@ class SubTicketsModule(Component):
         return children
 
     def validate_ticket(self, req, ticket):
+
         action = req.args.get('action')
-        if action == 'resolve':
+        if action == 'resolve' and self.resolve_validate:
             db = self.env.get_db_cnx()
             cursor = db.cursor()
             cursor.execute("SELECT parent, child FROM subtickets WHERE parent=%s",
@@ -126,7 +136,7 @@ class SubTicketsModule(Component):
                 if Ticket(self.env, child)['status'] != 'closed':
                     yield None, _('Child ticket #%s has not been closed yet') % child
 
-        elif action == 'reopen':
+        elif action == 'reopen' and self.reopen_validate:
             ids = set(NUMBERS_RE.findall(ticket['parents'] or ''))
             for id in ids:
                 if Ticket(self.env, id)['status'] == 'closed':
@@ -134,6 +144,7 @@ class SubTicketsModule(Component):
 
     # ITemplateStreamFilter method
     def filter_stream(self, req, method, filename, stream, data):
+        
         if req.path_info.startswith('/ticket/'):
             div = None
             if 'ticket' in data:
@@ -177,9 +188,13 @@ class SubTicketsModule(Component):
                         owner = tag.td(tag.a(ticket['owner'], href=href))
 
                         tbody.append(tag.tr(summary, type, status, owner))
-                        _func(children[id], depth + 1)
+                        if depth >= 0: 
+                            _func(children[id], depth + 1)
 
-                _func(data['subtickets'])
+                if self.recursion:
+                    _func(data['subtickets'])
+                else:
+                    _func(data['subtickets'],-1)
 
             if div:
                 add_stylesheet(req, 'subtickets/css/subtickets.css')
